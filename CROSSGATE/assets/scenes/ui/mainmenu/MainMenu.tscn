[gd_scene load_steps=19 format=2]

[ext_resource path="res://assets/scripts/ui/mainmenu/MainMenu.gd" type="Script" id=1]
[ext_resource path="res://assets/sprites/ui/mainmenu/whitescreen.png" type="Texture" id=2]
[ext_resource path="res://assets/sprites/ui/mainmenu/bg.png" type="Texture" id=3]
[ext_resource path="res://assets/sprites/ui/mainmenu/logo.png" type="Texture" id=4]
[ext_resource path="res://assets/sprites/ui/mainmenu/companylogo.png" type="Texture" id=5]
[ext_resource path="res://assets/sprites/misc/ShaderFX/glitch.jpg" type="Texture" id=6]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec2 waveOrigin;
uniform float waveForce;

void fragment() {
	vec2 disp = normalize(UV - waveOrigin) * waveForce * abs(cos(TIME*2.0)*0.05);
	COLOR = vec4(UV - disp, 0.0, 1.0);
	COLOR = texture(TEXTURE, UV - disp);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/waveOrigin = Vector2( 0.5, 1 )
shader_param/waveForce = 1.0

[sub_resource type="DynamicFontData" id=3]
font_path = "res://assets/fonts/Basis33/basis33.ttf"

[sub_resource type="DynamicFont" id=4]
size = 35
font_data = SubResource( 3 )

[sub_resource type="DynamicFontData" id=9]
font_path = "res://assets/fonts/Basis33/basis33.ttf"

[sub_resource type="DynamicFont" id=10]
font_data = SubResource( 9 )

[sub_resource type="DynamicFontData" id=5]
font_path = "res://assets/fonts/Basis33/basis33.ttf"

[sub_resource type="DynamicFont" id=6]
size = 35
font_data = SubResource( 5 )

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;
render_mode unshaded;

uniform bool grayscale = false;
uniform sampler2D displace : hint_albedo;
uniform float displaceAmount : hint_range(0, 0.1);
uniform float abberationAmount : hint_range(0, 0.1);
uniform float displaceSize : hint_range(0, 1);
uniform float displaceFrequency : hint_range(0, 100);

void fragment() {
	vec4 disp = texture(displace, SCREEN_UV * abs(cos(TIME * displaceFrequency))*displaceSize);
	vec2 newUV = SCREEN_UV + disp.xy * abs(sin(TIME))*displaceAmount;
	COLOR.r = texture(SCREEN_TEXTURE, newUV - cos(TIME)*abberationAmount).r;
	COLOR.g = texture(SCREEN_TEXTURE, newUV).g;
	COLOR.b = texture(SCREEN_TEXTURE, newUV - sin(TIME)*abberationAmount).b;
	COLOR.a = texture(SCREEN_TEXTURE, newUV).a;
	if(grayscale){
		COLOR.rgb = vec3(dot(COLOR.rgb, vec3(0.299, 0.587, 0.114)));
	}
}"

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )
shader_param/grayscale = false
shader_param/displaceAmount = 0.008
shader_param/abberationAmount = 0.003
shader_param/displaceSize = 1.0
shader_param/displaceFrequency = 5.0
shader_param/displace = ExtResource( 6 )

[sub_resource type="Shader" id=11]
code = "shader_type canvas_item;
render_mode unshaded;

uniform bool grayscale = false;
uniform sampler2D displace : hint_albedo;
uniform float displaceAmount : hint_range(0, 0.1);
uniform float abberationAmount : hint_range(0, 0.1);
uniform float displaceSize : hint_range(0, 1);
uniform float displaceFrequency : hint_range(0, 10);

void fragment() {
	vec4 disp = texture(displace, SCREEN_UV * abs(sin(TIME * displaceFrequency))*displaceSize);
	vec2 newUV = SCREEN_UV + disp.xy * abs(sin(TIME))*displaceAmount;
	COLOR.r = texture(SCREEN_TEXTURE, newUV - cos(TIME)*abberationAmount).r;
	COLOR.g = texture(SCREEN_TEXTURE, newUV).g;
	COLOR.b = texture(SCREEN_TEXTURE, newUV - sin(TIME)*abberationAmount).b;
	COLOR.a = texture(SCREEN_TEXTURE, newUV).a;
	if(grayscale){
		COLOR.rgb = vec3(dot(COLOR.rgb, vec3(0.299, 0.587, 0.114)));
	}
}"

[sub_resource type="ShaderMaterial" id=12]
shader = SubResource( 11 )
shader_param/grayscale = false
shader_param/displaceAmount = 0.02
shader_param/abberationAmount = 0.012
shader_param/displaceSize = 1.0
shader_param/displaceFrequency = 8.456
shader_param/displace = ExtResource( 6 )

[node name="MainMenu" type="Node2D"]
script = ExtResource( 1 )

[node name="V1" type="Node2D" parent="."]

[node name="Black" type="TextureRect" parent="V1"]
modulate = Color( 0, 0, 0, 1 )
margin_right = 640.0
margin_bottom = 360.0
rect_scale = Vector2( 2, 2 )
texture = ExtResource( 2 )

[node name="Background" type="TextureRect" parent="V1"]
modulate = Color( 0, 0.835294, 1, 0 )
material = SubResource( 2 )
margin_right = 640.0
margin_bottom = 360.0
rect_scale = Vector2( 2, 2 )
texture = ExtResource( 3 )

[node name="Logo" type="Node2D" parent="V1"]
editor/display_folded = true

[node name="LogoShadow" type="Sprite" parent="V1/Logo"]
modulate = Color( 0, 0, 0, 1 )
position = Vector2( 640, 260 )
scale = Vector2( 4, 4 )
texture = ExtResource( 4 )
offset = Vector2( 0, 4 )

[node name="LogoBody" type="Sprite" parent="V1/Logo"]
position = Vector2( 640, 260 )
scale = Vector2( 4, 4 )
texture = ExtResource( 4 )

[node name="PressAnyKey" type="Label" parent="V1"]
visible = false
margin_left = 458.0
margin_top = 480.0
margin_right = 822.0
margin_bottom = 526.0
custom_fonts/font = SubResource( 4 )
text = "PRESSIONE QUALQUER TECLA"

[node name="Production" type="Label" parent="V1"]
margin_left = 1087.0
margin_top = 704.0
margin_right = 1276.0
margin_bottom = 720.0
custom_fonts/font = SubResource( 10 )
text = "IRONRAIL PROJECT, 2019-2020"

[node name="Options" type="Node2D" parent="V1"]

[node name="TestStage" type="Label" parent="V1/Options"]
visible = false
modulate = Color( 1, 1, 1, 0.498039 )
margin_left = 573.0
margin_top = 480.0
margin_right = 708.0
margin_bottom = 516.0
custom_fonts/font = SubResource( 6 )
text = "TestStage"

[node name="WagonTestStage" type="Label" parent="V1/Options"]
visible = false
modulate = Color( 1, 1, 1, 0.498039 )
margin_left = 535.5
margin_top = 516.0
margin_right = 745.5
margin_bottom = 552.0
custom_fonts/font = SubResource( 6 )
text = "WagonTestStage"

[node name="Black" type="TextureRect" parent="."]
visible = false
modulate = Color( 0, 0, 0, 1 )
margin_right = 1280.0
margin_bottom = 720.0
rect_scale = Vector2( 2, 2 )
texture = ExtResource( 2 )

[node name="CompanyLogo" type="Sprite" parent="."]
modulate = Color( 1, 1, 1, 0 )
position = Vector2( 640, 360 )
scale = Vector2( 4, 4 )
texture = ExtResource( 5 )

[node name="GLITCH_MASK" type="ColorRect" parent="."]
visible = false
material = SubResource( 8 )
margin_right = 1280.0
margin_bottom = 720.0

[node name="TIMESTOP_MASK" type="ColorRect" parent="."]
visible = false
material = SubResource( 12 )
margin_right = 1280.0
margin_bottom = 720.0

[node name="Timers" type="Node2D" parent="."]

[node name="GAME_START_DELAY" type="Timer" parent="Timers"]
one_shot = true
autostart = true

[node name="COMPANY_LOGO_DELAY" type="Timer" parent="Timers"]
wait_time = 3.0
one_shot = true

[node name="GAME_LOGO_START_DELAY" type="Timer" parent="Timers"]
wait_time = 2.0
one_shot = true

[node name="GLITCH_APPEARANCE" type="Timer" parent="Timers"]
wait_time = 0.1
one_shot = true

[node name="OPTION_BLINK" type="Timer" parent="Timers"]
wait_time = 0.5
one_shot = true

[node name="SCENE_CHANCE_DELAY" type="Timer" parent="Timers"]
one_shot = true
[connection signal="timeout" from="Timers/GAME_START_DELAY" to="." method="_on_GAME_START_DELAY_timeout"]
[connection signal="timeout" from="Timers/COMPANY_LOGO_DELAY" to="." method="_on_COMPANY_LOGO_DELAY_timeout"]
[connection signal="timeout" from="Timers/GAME_LOGO_START_DELAY" to="." method="_on_GAME_LOGO_START_DELAY_timeout"]
[connection signal="timeout" from="Timers/GLITCH_APPEARANCE" to="." method="_on_GLITCH_APPEARANCE_timeout"]
[connection signal="timeout" from="Timers/OPTION_BLINK" to="." method="_on_OPTION_BLINK_timeout"]
[connection signal="timeout" from="Timers/SCENE_CHANCE_DELAY" to="." method="_on_SCENE_CHANCE_DELAY_timeout"]
